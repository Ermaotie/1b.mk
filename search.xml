<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Server常用命令</title>
      <link href="/2020/12/07/Server%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2020/12/07/Server%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<p>买了好多服务器hhh，明明知道会吃灰也想买。总结一些常用的一键脚本叭。</p><ol><li><p>V2ray一键(233版本)<br>真的很方便，于是就偷懒干脆没看V2ray官方文档。不过大致流程还是有一些了解。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -s -L https:&#x2F;&#x2F;git.io&#x2F;v2ray.sh)</span><br><span class="line"></span><br><span class="line"># v2ray bbr 还可以更换内核</span><br></pre></td></tr></table></figure></li><li><p><a href="https://github.com/mack-a/v2ray-agent">Make-A(v2ray/Xray 多合一脚本)</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget -P &#x2F;root -N --no-check-certificate &quot;https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;mack-a&#x2F;v2ray-agent&#x2F;master&#x2F;install.sh&quot; &amp;&amp; chmod 700 &#x2F;root&#x2F;install.sh &amp;&amp; &#x2F;root&#x2F;install.sh</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol><ol start="3"><li><p>Warp 一键</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">## ipv4</span><br><span class="line">bash &lt;(curl -fsSL git.io&#x2F;warp.sh) d</span><br><span class="line">## ipv6</span><br><span class="line">bash &lt;(curl -fsSL git.io&#x2F;warp.sh) 6</span><br></pre></td></tr></table></figure></li></ol><ol start="4"><li><p>NeteaseUnBlock</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 超级用户下</span><br><span class="line">wget -N --no-check-certificate raw.githubusercontent.com&#x2F;XIU2&#x2F;SHELL&#x2F;master&#x2F;unblock163.sh &amp;&amp; chmod +x unblock163.sh &amp;&amp; bash unblock163.sh</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p><a href="https://github.com/oooldking/script">SuperBench</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -Lso- git.io&#x2F;superbench.sh | bash</span><br></pre></td></tr></table></figure></li><li><p>CCAA</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#海外</span><br><span class="line">bash &lt;(curl -Lsk https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;helloxz&#x2F;ccaa&#x2F;master&#x2F;ccaa.sh)</span><br><span class="line">#国内</span><br><span class="line">bash &lt;(curl -Lsk https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;helloxz&#x2F;ccaa&#x2F;master&#x2F;ccaa.sh)</span><br></pre></td></tr></table></figure></li><li><p><a href="https://github.com/ytdl-org/youtube-dl">Youtube-dl</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo curl -L https:&#x2F;&#x2F;yt-dl.org&#x2F;downloads&#x2F;latest&#x2F;youtube-dl -o &#x2F;usr&#x2F;local&#x2F;bin&#x2F;youtube-dl</span><br><span class="line">sudo chmod a+rx &#x2F;usr&#x2F;local&#x2F;bin&#x2F;youtube-dl</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p><a href="eheh.org">EHEH</a><br>点击标题叭，服务器监控。我想之后我可能会用到。</p></li><li><p><a href="https://bt.cn/">BT</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 7.3 version(需要手机号登陆)</span><br><span class="line">wget -O install.sh http:&#x2F;&#x2F;download.bt.cn&#x2F;install&#x2F;install-ubuntu_6.0.sh &amp;&amp; sudo bash install.sh</span><br><span class="line"></span><br><span class="line"># 5.9 version</span><br><span class="line">wget -O install.sh http:&#x2F;&#x2F;download.bt.cn&#x2F;install&#x2F;install-ubuntu.sh &amp;&amp; sudo bash install.sh</span><br></pre></td></tr></table></figure></li><li><p><a href="https://lnmp.org/">LNMP</a>一键安装脚本，个人觉得比宝塔要好用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http:&#x2F;&#x2F;soft.vpser.net&#x2F;lnmp&#x2F;lnmp1.8.tar.gz -cO lnmp1.8.tar.gz &amp;&amp; tar zxf lnmp1.8.tar.gz &amp;&amp; cd lnmp1.8 &amp;&amp; .&#x2F;install.sh lnmp</span><br></pre></td></tr></table></figure><p>如需要安装LNMPA或LAMP，将./install.sh 后面的参数lnmp替换为lnmpa或lamp即可。同时也支持单独安装Nginx或数据库，命令为 ./install.sh nginx 或 ./install.sh db。如需更改网站和数据库目录、自定义Nginx参数、PHP参数模块、开启lua等需在运行./install.sh 命令前修改安装包目录下的 lnmp.conf 文件，详细可以查看<a href="https://lnmp.org/faq/lnmp-software-list.html#lnmp.conf">lnmp.conf文件参数说明</a>。</p></li><li><p><a href="https://github.com/KANIKIG/Multi-EasyGost">Gost转发</a></p></li></ol><ul><li>启动脚本<br><code>wget --no-check-certificate -O gost.sh https://raw.githubusercontent.com/KANIKIG/Multi-EasyGost/master/gost.sh &amp;&amp; chmod +x gost.sh &amp;&amp; ./gost.sh</code></li><li>再次运行本脚本只需要输入<code>./gost.sh</code>回车即可</li></ul><ol start="10"><li><p>[realm转发](<a href="https://github.com/seal0207/EasyRealM">seal0207/EasyRealM: RealM 转发脚本 (github.com)</a>)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -N --no-check-certificate https:&#x2F;&#x2F;git.io&#x2F;realm.sh &amp;&amp; chmod +x realm.sh &amp;&amp; .&#x2F;realm.sh</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>欧美影视下载</title>
      <link href="/2020/11/17/mgdl/"/>
      <url>/2020/11/17/mgdl/</url>
      
        <content type="html"><![CDATA[<h3 id="不论是观影还是下载影片，都推荐在PC端进行"><a href="#不论是观影还是下载影片，都推荐在PC端进行" class="headerlink" title="不论是观影还是下载影片，都推荐在PC端进行"></a>不论是观影还是下载影片，都推荐在PC端进行</h3><h1 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h1><ul><li>下载种子或获取磁力链接</li><li>将以上提交服务器开始下载</li><li>将文件拉回本地</li><li>删除远端文件</li></ul><h1 id="详解"><a href="#详解" class="headerlink" title="详解"></a>详解</h1><ul><li><p>下载种子或获取磁力链接</p><ul><li>开启代理</li><li>打开<a href="https://rarbgprx.org/torrents.php?category=movies">https://rarbgprx.org/torrents.php?category=movies</a></li><li>左侧选择要搜索的类目（例如电影或是TV Show）</li><li>中间搜索你想要看的电影或节目，注意一定要用英文名<ul><li>例如：少年的你 则搜索 Better Days</li><li>不知道英文名可以先百度</li></ul></li><li>搜索完在下面根据名称日期预览图等挑选一个，单击之后会跳到详情页面</li><li>第一行<strong>Torrent</strong>，点击旁边的链接就可以下载种子文件，右边红色小磁铁就是磁力链接。（建议使用种子）</li></ul></li><li><p>将以上提交服务器开始下载</p><ul><li>浏览器新开标签页打开<a href="https://u.nu/mg-dl">https://u.nu/mg-dl</a>（MG Download）</li><li>AriaNg认证<ul><li>左边标签选择<strong>Aria2Ng</strong>设置，然后在页面左上找到<strong>全局</strong>旁边的<strong>RPC</strong>选项卡，单击</li><li>Aria2 RPC 密钥一栏填写<strong>657286</strong>，刷新页面</li></ul></li><li>创建下载任务<ul><li>页面左上找到<strong>新建</strong>,单击</li><li><strong>立即下载</strong>按钮旁边有文件夹字样，单击上传刚刚下载好的种子文件</li><li><strong>立即下载</strong></li></ul></li><li>等待下载完成<ul><li>下载速度取决于资源热度</li></ul></li></ul></li><li><p>将文件拉回本地</p><ul><li>再次打开<a href="https://u.nu/mg-dl">https://u.nu/mg-dl</a></li><li>点击左侧菜单栏最后一项<strong>文件管理</strong></li><li>登陆<ul><li>账号： <strong>ccaa</strong></li><li>密码： <strong>admin</strong></li></ul></li><li>找到自己的文件<ul><li>单击，底色变蓝说明已经选中</li><li>右上角点击下载图标，开始下载</li></ul></li><li>下载完成<ul><li>请将下载完的文件删除，因为服务器外存有限</li><li>选中，点击右上垃圾桶按钮即可</li></ul></li></ul></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>轻量博客搭建（tcpsc)</title>
      <link href="/2020/04/08/%E8%BD%BB%E9%87%8F%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA(tcpsc)/"/>
      <url>/2020/04/08/%E8%BD%BB%E9%87%8F%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA(tcpsc)/</url>
      
        <content type="html"><![CDATA[<h2 id="typecho-caddy-php7-sqlite3-cloudflare"><a href="#typecho-caddy-php7-sqlite3-cloudflare" class="headerlink" title="typecho+caddy+php7+sqlite3+cloudflare"></a><strong>typecho+caddy+php7+sqlite3+cloudflare</strong></h2><p>系统Debian10：<br>执行相应的更新操作,以及安装必要的依赖</p><pre><code>apt updateapt install lsb-releaseapt install net-tools</code></pre><p>优化打开文件的限制次数，默认的打开文件数是1024：</p><pre><code>echo &#39;* soft nofile 51200* hard nofile 51200&#39; &gt;&gt; /etc/security/limits.confulimit -n 51200echo &#39;fs.file-max = 51200net.core.rmem_max = 67108864net.core.wmem_max = 67108864net.core.netdev_max_backlog = 250000net.core.somaxconn = 4096net.ipv4.tcp_syncookies = 1net.ipv4.tcp_tw_reuse = 1net.ipv4.tcp_tw_recycle = 0net.ipv4.tcp_fin_timeout = 30net.ipv4.tcp_keepalive_time = 1200net.ipv4.ip_local_port_range = 10000 65000net.ipv4.tcp_max_syn_backlog = 8192net.ipv4.tcp_max_tw_buckets = 5000net.ipv4.tcp_fastopen = 3net.ipv4.tcp_mem = 25600 51200 102400net.ipv4.tcp_rmem = 4096 87380 67108864net.ipv4.tcp_wmem = 4096 65536 67108864net.ipv4.tcp_mtu_probing = 1net.ipv4.tcp_congestion_control = hybla&#39; &gt;&gt; /etc/sysctl.confsysctl -p</code></pre><p>更新php7.2的软件源</p><pre><code>#添加GPGwget -O /etc/apt/trusted.gpg.d/php.gpg https://mirror.xtom.com.hk/sury/php/apt.gpg#安装apt-transport-httpsapt-get install apt-transport-https#添加sury软件源sh -c &#39;echo &quot;deb https://packages.sury.org/php/ $(lsb_release -sc) main&quot; &gt; /etc/apt/sources.list.d/php.list&#39;#更新软件源缓存apt-get update</code></pre><p>安装php 7.2</p><pre><code>apt install php7.2-fpm php7.2-mysql php7.2-curl php7.2-gd php7.2-mbstring php7.2-xml php7.2-xmlrpc php7.2-zip php7.2-opcache -y</code></pre><p>设置php</p><pre><code>sed -i &#39;s/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/&#39; /etc/php/7.2/fpm/php.ini </code></pre><p>php更多命令：</p><pre><code>systemctl restart php7.2-fpm  #重启systemctl start php7.2-fpm  #启动systemctl stop php7.2-fpm  #关闭systemctl status php7.2-fpm  #检查状态</code></pre><hr><p>安装sqlite3</p><pre><code>apt install php7.2-sqlite3#创建数据库文件mkdir /www/db #示例cd /www/dbsqlite3 testDB.db#创建以后权限加满，可读写chmod -R 777 /www/db</code></pre><hr><p>安装caddy：</p><pre><code>#下载并解压Caddywget &quot;https://caddyserver.com/download/linux/amd64?license=personal&amp;telemetry=off&quot; -O - | tar -xzv#新建并写入Caddyfile，目录最好放在Caddy下https://yourdomain.com &#123;    root /www/web/bulid    tls self_signed    fastcgi / /run/php/php7.2-fpm.sock php &#123;         ext .php        split .php        index index.php   &#125;   proxy /hello 127.0.0.1:10000 &#123;      websocket      header_upstream -Origin    &#125;   rewrite &#123;        if &#123;path&#125; not_match ^\/admin        to &#123;path&#125; &#123;path&#125;/ /index.php?&#123;query&#125;    &#125;&#125;</code></pre><p>使用自签名证书，<strong>cloudflare的Catch需要设置Full模式。</strong></p><p>启动Caddy：</p><pre><code>./caddy &gt; caddy.log 2&gt;&amp;1 &amp;</code></pre><p>相关命令：</p><pre><code>启动：systemctl start caddy停止：systemctl stop caddy重启：systemctl restart caddy</code></pre><hr><p>安装typecho：</p><pre><code>#下载wget --no-check-certificate https://github.com/typecho/typecho/releases/download/v1.1-17.10.30-release/1.1.17.10.30.-release.tar.gz -O typecho.tar.gztar -zxvf typecho.tar.gz -C  /www/web#使用本Blog模板wget --no-check-certificate  https://github.com/Zisbusy/Akina-for-Typecho/archive/v3.0.zipmv /Akina-for-Typecho-3.0/Akina/*  /www/web/build/usr/themes/Akina</code></pre><h2 id="大功告成！"><a href="#大功告成！" class="headerlink" title="大功告成！"></a><strong>大功告成！</strong></h2>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ssh连接树莓派&amp;xrdp远程连接</title>
      <link href="/2020/04/08/ssh%E8%BF%9E%E6%8E%A5%E6%A0%91%E8%8E%93%E6%B4%BE-xrdp%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5/"/>
      <url>/2020/04/08/ssh%E8%BF%9E%E6%8E%A5%E6%A0%91%E8%8E%93%E6%B4%BE-xrdp%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5/</url>
      
        <content type="html"><![CDATA[<p>买回来一块树莓派裸板，没想到ssh连接花了这么长时间。</p><p>首先是在写入系统时需要创建一个名为ssh的文件夹。16年之后的版本都需要这样。因为默认的ssh的关闭的。<br>之后是利用一根网线，直接接到猫的网口，再用<strong>Advanced IP Scanner</strong>扫描找到raspberry的IP地址。</p><h2 id="ssh连接："><a href="#ssh连接：" class="headerlink" title="ssh连接："></a>ssh连接：</h2><pre><code>username：pipassword：raspberry</code></pre><h2 id="连接Wifi："><a href="#连接Wifi：" class="headerlink" title="连接Wifi："></a>连接Wifi：</h2><pre><code>sudo raspi-config</code></pre><p>2 Network Options<br>然后回车，输入SSID，password。</p><pre><code>sudo reboot</code></pre><p>重启自动链接。</p><h2 id="改为静态IP："><a href="#改为静态IP：" class="headerlink" title="改为静态IP："></a>改为静态IP：</h2><p>（否则每次重启后连接都得先找地址）</p><pre><code>sudo nano /etc/dhcpcd.conf</code></pre><p>在文件末加入</p><pre><code>interface eth0# 指定静态IP，/24表示子网掩码为 255.255.255.0static ip_address=192.168.1.20/24# 路由器/网关IP地址static routers=192.168.1.1# 手动自定义DNS服务器static domain_name_servers=114.114.114.114</code></pre><p>WiFi则将第一行改为：</p><pre><code>interface wlan0</code></pre><p>重启生效：</p><pre><code>sudo reboot</code></pre><h2 id="安装xrdp："><a href="#安装xrdp：" class="headerlink" title="安装xrdp："></a>安装xrdp：</h2><p>首先更改软件源：</p><pre><code>sudo vi /etc/apt/sources.list</code></pre><p>更新：</p><pre><code>sudo apt-get upgrade</code></pre><p>安装xrdp：</p><pre><code>sudo apt-get install xrdp</code></pre><p>安装完成后即可通过win10自带的远程桌面连接。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Pyinstaller打包时可能会造成的一些问题</title>
      <link href="/2020/03/15/Pyinstaller%E6%89%93%E5%8C%85%E6%97%B6%E5%8F%AF%E8%83%BD%E4%BC%9A%E9%80%A0%E6%88%90%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/"/>
      <url>/2020/03/15/Pyinstaller%E6%89%93%E5%8C%85%E6%97%B6%E5%8F%AF%E8%83%BD%E4%BC%9A%E9%80%A0%E6%88%90%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>pyinstaller基本参数</p><pre><code>-D 零散文件，不完全打包-F 只有exe-w 窗口--nonconsole 无控制台</code></pre><p>在打包过程中的问题：</p><p>pyinstaller 在打包过程中，不会将import的库中引用或依赖的文件一并打包，所以我们需要通过-D来打包，并从python文件夹中找到对应的库，复制到打包后的文件夹中</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
